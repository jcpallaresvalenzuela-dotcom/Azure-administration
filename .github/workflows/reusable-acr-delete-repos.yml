name: Reusable - Delete all repositories in ACR (Azure CLI)

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: If true, do not delete, only print actions
        required: false
        default: false
        type: boolean
  
  workflow_call:
    inputs:
      dry-run:
        description: If true, do not delete, only print actions
        required: false
        default: false
        type: boolean
    secrets:
      SERVICE_PRINCIPAL:
        required: true
        description: Azure credentials JSON created with --sdk-auth
      ACR_NAME:
        required: true
        description: ACR name (short, e.g. jcpallares)


jobs:
  delete-repos:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Login to Azure (Service Principal)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.SERVICE_PRINCIPAL }}

      - name: Login to ACR (data-plane)
        shell: bash
        env:
          ACR_NAME: ${{ secrets.ACR_NAME }}
        run: |
          set -euo pipefail
          az acr login -n "${ACR_NAME}" --expose-token --only-show-errors 1>/dev/null

      - name: Delete repositories in ACR
        shell: bash
        env:
          ACR_NAME: ${{ secrets.ACR_NAMEe }}
          DRY_RUN: ${{ inputs['dry-run'] }}
        run: |
          set -euo pipefail

          echo "Listing repositories in ACR: ${ACR_NAME}"

          # Un solo intento, salida a array
          mapfile -t REPOS < <(az acr repository list -n "${ACR_NAME}" -o tsv --only-show-errors)

          # Esperar 15s tras el listado
          sleep 15

          if (( ${#REPOS[@]} == 0 )); then
            echo "No repositories found. Nothing to delete."
            exit 0
          fi

          echo "Found repositories:"
          printf ' - %s\n' "${REPOS[@]}"

          if [[ "${DRY_RUN}" == "true" ]]; then
            echo "DRY RUN enabled. Skipping deletions."
            exit 0
          fi

          for repo in "${REPOS[@]}"; do
            [[ -z "${repo}" ]] && continue
            echo "Deleting repository: ${repo}"
            az acr repository delete -n "${ACR_NAME}" --repository "${repo}" --yes --only-show-errors 1>/dev/null
            # Esperar 15s despu√©s de cada borrado
            sleep 15
          done

          echo "Done deleting repositories in ${ACR_NAME}."
        
